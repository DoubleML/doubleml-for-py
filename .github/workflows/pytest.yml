# Workflow based on https://github.com/actions/starter-workflows/blob/main/ci/python-package.yml

name: build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  schedule:
    - cron: "0 9 * * 1,3,5"
  workflow_dispatch:

jobs:
  build:

    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.python-version }})

    strategy:
      matrix:
        config:
          - {os: ubuntu-latest, python-version: 3.6}
          - {os: ubuntu-latest, python-version: 3.7}
          - {os: ubuntu-latest, python-version: 3.8}
          - {os: windows-latest, python-version: 3.8}
          - {os: macOS-latest, python-version: 3.8}
          - {os: ubuntu-latest, python-version: 3.9}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2
    - name: Set up Python ${{ matrix.config.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.config.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        pip install -r requirements.txt
        pip install .
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      if: |
        matrix.config.os != 'ubuntu-latest' ||
        matrix.config.python-version != '3.8'
      run: |
        pytest -m ci

    - name: Test with pytest and coverage
      if: |
        matrix.config.os == 'ubuntu-latest' &&
        matrix.config.python-version == '3.8'
      run: |
        pip install pytest-cov
        pytest --cov=./ --cov-report=xml

    - name: Upload coverage to Codecov
      if: |
        matrix.config.os == 'ubuntu-latest' &&
        matrix.config.python-version == '3.8'
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests

    - name: Upload coverage to codacy
      if: |
        matrix.config.os == 'ubuntu-latest' &&
        matrix.config.python-version == '3.8'
      uses: codacy/codacy-coverage-reporter-action@master
      with:
        project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
        coverage-reports: ./coverage.xml
